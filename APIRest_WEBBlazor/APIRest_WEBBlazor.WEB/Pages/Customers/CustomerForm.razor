@inject SweetAlertService sweetAlertService

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation" />

<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="card border border-primary mt-5">
        <div class="card-body">
            <div class="row">
                <div class="col-sm-6 mb-3">
                    <label>NOMBRE:</label>
                    <InputText class="form-control" @bind-Value="@Customer.Name" />
                    <ValidationMessage For="@(() => Customer.Name)" />
                </div>
                <div class="col-sm-6 mb-3">
                    <label>APELLIDO:</label>
                    <InputText class="form-control" @bind-Value="@Customer.LastName" />
                    <ValidationMessage For="@(() => Customer.LastName)" />
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 mb-3">
                    <label>DOCUMENTO:</label>
                    <InputText class="form-control" @bind-Value="@Customer.Document" />
                    <ValidationMessage For="@(() => Customer.Document)" />
                </div>
                <div class="col-sm-6 mb-3">
                    <label>CORREO:</label>
                    <InputText class="form-control" @bind-Value="@Customer.Email" />
                    <ValidationMessage For="@(() => Customer.Email)" />
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 mb-3">
                    <label>PASSWORD:</label>
                    <InputText class="form-control" @bind-Value="@Customer.Password" />
                    <ValidationMessage For="@(() => Customer.Password)" />
                </div>
                <div class="col-sm-6 mb-3 mt-4">
                    <button class="btn btn-primary" type="submit">Guardar Cambios</button>
                </div>
            </div>
        </div>
    </div>
    <div class="mt-5">
        <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>
    </div>
</EditForm>

@code {
    private EditContext editContext = null!;

    [Parameter]
    [EditorRequired]
    public Customer Customer { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public EventCallback OnValidSubmit { get; set; }

    [Parameter]
    [EditorRequired]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessfully { get; set; }


    protected override void OnInitialized()
    {
        editContext = new(Customer);
    }


    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasModified = editContext.IsModified();
        if (!formWasModified || FormPostedSuccessfully)
        {
            return;
        }

        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Deseas abandonar la pagina y perder los cambios?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Sí"
            });

        var confirm = !string.IsNullOrEmpty(result.Value);
        if (confirm)
        {
            return;
        }

        context.PreventNavigation();
    }
}
